CREATE TABLE scrobble (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    trackId INTEGER NOT NULL,
    listenedAt INTEGER NOT NULL,
    nowPlaying INTEGER as Boolean DEFAULT 0 NOT NULL,
    UNIQUE (trackId, listenedAt),
    FOREIGN KEY (trackId) REFERENCES track(id) ON DELETE CASCADE
);

getScrobblesCount:
SELECT COUNT(id) FROM scrobble;

insert:
INSERT OR IGNORE
INTO scrobble(trackId, listenedAt, nowPlaying)
VALUES (:trackId, :listenedAt, :nowPlaying);

upsert {
    UPDATE scrobble
    SET nowPlaying = :nowPlaying
    WHERE trackId = :trackId AND listenedAt = :listenedAt;

    INSERT OR IGNORE
    INTO scrobble(trackId, listenedAt, nowPlaying)
    VALUES (:trackId, :listenedAt, :nowPlaying);
}

scrobbleData:
SELECT
    s.listenedAt,
    s.nowPlaying,
    t.loved,
    t.name AS track,
    ar.name AS artist,
    al.name AS album,
    al.lowArtwork
FROM scrobble s
LEFT JOIN track t ON s.trackId = t.id
LEFT JOIN album al ON t.albumId = al.id
LEFT JOIN artist ar ON al.artistId = ar.id
ORDER BY s.listenedAt DESC;