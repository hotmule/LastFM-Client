CREATE TABLE track (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    artistId INTEGER NOT NULL,
    albumId INTEGER,
    name TEXT,
    loved INTEGER AS Boolean DEFAULT 0 NOT NULL,
    lovedAt INTEGER,
    rank INTEGER AS Int,
    playCount INTEGER,
    FOREIGN KEY (artistId) REFERENCES artist(id) ON DELETE CASCADE,
    FOREIGN KEY (albumId) REFERENCES album(id) ON DELETE CASCADE
);

getTopTracksCount:
SELECT COUNT(track.id) FROM track WHERE rank NOT NULL;

getLovedTracksPageCount:
SELECT COUNT(track.id) FROM track WHERE lovedAt NOT NULL;

insert:
INSERT OR REPLACE INTO track(artistId, albumId, name, loved, lovedAt, rank, playCount)
VALUES (?, ?, ?, ?, ?, ?, ?);

lastId:
SELECT last_insert_rowid();

topTracks:
SELECT
    ar.name AS artist,
    t.name AS track,
    t.rank,
    t.playCount,
    al.lowArtwork
FROM track t
LEFT JOIN album al ON t.albumId = al.id
LEFT JOIN artist ar ON t.artistId = ar.id
WHERE t.rank NOT NULL;

lovedTracks:
SELECT
    ar.name AS artist,
    t.name AS track,
    t.loved,
    t.lovedAt,
    al.lowArtwork
FROM track t
LEFT JOIN album al ON t.albumId = al.id
LEFT JOIN artist ar ON t.artistId = ar.id
WHERE t.lovedAt NOT NULL;