CREATE TABLE artist (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    userName TEXT NOT NULL,
    name TEXT,
    rank INTEGER AS Int,
    playCount INTEGER,
    FOREIGN KEY (userName) REFERENCES profile(userName) ON DELETE CASCADE
);

getTopArtistsCount:
SELECT COUNT(artist.id) FROM artist WHERE rank NOT NULL;

insert:
INSERT OR REPLACE INTO artist(userName, name, rank, playCount) VALUES (?, ?, ?, ?);

lastId:
SELECT last_insert_rowid();

artistTop:
SELECT
    name,
    rank,
    playCount
FROM artist
WHERE rank NOT NULL AND userName = ?;

deleteScrobbles:
DELETE FROM artist WHERE userName = ? AND EXISTS (
    SELECT s.id FROM scrobble s
    LEFT JOIN track t ON t.id = s.trackId
    WHERE t.artistId = artist.id AND t.rank IS NULL
);

deleteTopArtist:
DELETE FROM artist WHERE userName = ? AND rank NOT NULL;

deleteTopAlbums:
DELETE FROM artist WHERE userName = ? AND EXISTS (
    SELECT al.id FROM album al
    WHERE artist.id = al.artistId AND al.rank NOT NULL
);

deleteTopTracks:
DELETE FROM artist WHERE userName = ? AND EXISTS (
    SELECT t.id FROM track t
    WHERE artist.id = t.artistId AND t.rank NOT NULL
);

deleteLovedTracks:
DELETE FROM artist WHERE userName = ? AND EXISTS (
    SELECT t.id FROM track t
    WHERE artist.id = t.artistId AND t.loved = 1
);